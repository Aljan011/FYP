"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[995],{9995:(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var a=n(6540),r=n.n(a);const l=e=>{const[t,n]=(0,a.useState)({difficulty:"",target:""}),[l,i]=(0,a.useState)([]),[c,o]=(0,a.useState)([]),[s,u]=(0,a.useState)({title:"",description:""}),[m,d]=(0,a.useState)("");(0,a.useEffect)((()=>{let e="/api/get_exercises/";const n=new URLSearchParams;m&&n.append("q",m),t.difficulty&&n.append("difficulty",t.difficulty),t.target&&n.append("target",t.target),n.toString()&&(e+=`?${n.toString()}`),fetch(e).then((e=>e.json())).then((e=>i(e))).catch((e=>console.error("Error fetching exercises:",e)))}),[m,t]);const p=e=>{const{name:t,value:a}=e.target;n((e=>({...e,[t]:a})))};return r().createElement("div",null,r().createElement("h1",null,"Search and Filter Exercises"),r().createElement("input",{type:"text",placeholder:"Search exercises...",value:m,onChange:e=>{d(e.target.value)}}),r().createElement("select",{name:"difficulty",value:t.difficulty,onChange:p},r().createElement("option",{value:""},"All Difficulties"),r().createElement("option",{value:"easy"},"Easy"),r().createElement("option",{value:"medium"},"Medium"),r().createElement("option",{value:"hard"},"Hard")),r().createElement("select",{name:"target",value:t.target,onChange:p},r().createElement("option",{value:""},"All Targets"),r().createElement("option",{value:"chest"},"Chest"),r().createElement("option",{value:"legs"},"Legs"),r().createElement("option",{value:"arms"},"Arms")),r().createElement("div",{id:"exerciseList"},l.length>0?l.map((e=>r().createElement("div",{key:e.id},r().createElement("h2",null,e.name),r().createElement("img",{src:e.image_url,alt:e.name}),r().createElement("p",null,e.description),r().createElement("p",null,r().createElement("strong",null,"Target:")," ",e.target),r().createElement("p",null,r().createElement("strong",null,"Equipment:")," ",e.equipment),r().createElement("button",{onClick:()=>(e=>{o((t=>t.some((t=>t.id===e.id))?t.filter((t=>t.id!==e.id)):[...t,e]))})(e)},c.some((t=>t.id===e.id))?"Deselect":"Select")))):r().createElement("p",null,"No exercises found.")),r().createElement("button",{onClick:async()=>{const e={title:s.title,description:s.description,exercises:c.map((e=>e.id))};try{const t=await fetch("/api/workouts",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(t.ok){const e=await t.json();alert("Workout Submitted Successfully!"),console.log(e)}else{const e=await t.json();alert("Error submitting workout: "+e.message)}}catch(e){console.error("Error:",e),alert("Error submitting workout!")}}},"Submit Workout"))}}}]);